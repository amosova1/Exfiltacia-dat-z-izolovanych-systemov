def extract_time(line):
    try:
        return float(line.split(",")[0])
    except ValueError:
        return None

def parse_rgb(line):
    try:
        start = line.index('[') + 1
        end = line.index(']')
        rgb_str = line[start:end]
        rgb_values = list(map(int, rgb_str.split()))
        return rgb_values
    except ValueError:
        return None

# Funkcia extrahujúca exfiltrované dáta - hodnoty threshold a repeat_window je možné prepísať
# threshold je nastavený na hodnotu 2 pre použitie danej konštanty pri prenose dát
# repeat_window má časovu hodnotu vyjadrujúcu nemenenie ne/použitia filtra pri vysielaní opakovanej hodnoty bitu  
def check_changes_over_threshold(data, threshold=2, repeat_window=670):
    last_direction = None
    last_change_time = -float('inf')
    last_values = None

    for i in range(1, len(data)):
        (t_prev, prev), (t_curr, curr) = data[i - 1], data[i]
        diffs = [c - p for p, c in zip(prev, curr)]

        # Odhalenie zmeny použitia filtra s odchýlkou, kvôli použitiu stabilizácie a odstránenia šumu 
        significant = [d for d in diffs if abs(d) >= threshold]
        significant2 = [d for d in diffs if abs(d) >= threshold+1]

        if len(significant) >= 3 or len(significant2) >= 2:
            # Nedetekovaný exfiltrovaný bit (hodnota exfiltrovaného bitu je rovnaká ako predchádzajúca)
            if (t_curr - last_change_time) > repeat_window and last_direction is not None:
                print("Repeat Direction flags:", last_direction)
            
            direction = [1 if d > 0 else (0 if d < 0 else '-') for d in diffs]

            # Výsledné dáta (čas snímku, smer zmeny každej RGB hodnoty pixelu (+/- = 1/0))
            print(f"{t_prev:.2f} ms: {prev}")
            print(f"{t_curr:.2f} ms: {curr}")
            print("Direction flags:", direction)

            # Posledná detekovaná zmena zapnutia alebo vypnutia filtra 
            last_direction = direction
            last_change_time = t_curr
            last_values = curr



def main():
    # Modifikovateľné dáta
    filename = "pixel_values.txt"

    with open(filename, "r") as f:
        lines = f.readlines()

    rgb_data = []
    for line in lines:
        time_val = extract_time(line)

        # Hodnota 2845.0 vyjadruje čas začiatku exfiltrácie vo videu
        if time_val is None or not str(time_val) or time_val <= 2845.0:
            continue

        rgb = parse_rgb(line)
        if rgb:
            rgb_data.append((time_val, rgb))

    check_changes_over_threshold(rgb_data)


if __name__ == "__main__":
    main()
